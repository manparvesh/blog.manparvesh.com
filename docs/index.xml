<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Man Parvesh&#39;s Technical Journal</title>
    <link>https://blog.manparvesh.com/</link>
    <description>Recent content in Home on Man Parvesh&#39;s Technical Journal</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 04 Apr 2025 23:59:47 -0700</lastBuildDate>
    <atom:link href="https://blog.manparvesh.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a Telegram Bot for Health Tracking</title>
      <link>https://blog.manparvesh.com/posts/sehat-bot/</link>
      <pubDate>Fri, 04 Apr 2025 23:59:47 -0700</pubDate>
      <guid>https://blog.manparvesh.com/posts/sehat-bot/</guid>
      <description>&lt;p&gt;I built a custom Telegram bot for health tracking instead of using existing apps, providing complete control over data privacy and feature implementation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-telegram&#34;&gt;&#xA;Why Telegram?&#xA;&lt;a href=&#34;#why-telegram&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Free Infrastructure:&lt;/strong&gt; No hosting costs for bot interactions&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Well-documented API:&lt;/strong&gt; Robust development framework&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Minimal Server Requirements:&lt;/strong&gt; Telegram handles message routing&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Universal Access:&lt;/strong&gt; Cross-platform without app store dependencies&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;how-it-works&#34;&gt;&#xA;How It Works&#xA;&lt;a href=&#34;#how-it-works&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Daily Check-ins:&lt;/strong&gt; 7 AM PST reminders for five habit metrics: weight training, cardio, diet adherence, sleep (8+ hours), and steps (5,000+).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Optimizing Single-Screen Productivity on macOS</title>
      <link>https://blog.manparvesh.com/posts/single-screen-efficiency/</link>
      <pubDate>Tue, 04 Feb 2025 19:34:33 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/single-screen-efficiency/</guid>
      <description>&lt;p&gt;I transitioned from a three-monitor setup (laptop + dual 27&amp;quot; displays) to single-screen productivity to reduce context switching and eliminate notification distractions. The multi-screen configuration, while seemingly efficient, created cognitive overhead through constant peripheral interruptions.&lt;/p&gt;&#xA;&lt;h2 id=&#34;implementation-strategy&#34;&gt;&#xA;Implementation Strategy&#xA;&lt;a href=&#34;#implementation-strategy&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blog.manparvesh.com/img/divided-dock.png&#34; alt=&#34;Divided Dock Configuration&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;system-configuration&#34;&gt;&#xA;System Configuration&#xA;&lt;a href=&#34;#system-configuration&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Static Desktop Management:&lt;/strong&gt; Disable &amp;ldquo;Automatically rearrange Spaces based on recent use&amp;rdquo; in System Settings &amp;gt; Desktop &amp;amp; Dock&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Visual Dock Segmentation:&lt;/strong&gt; Install vertical-bar.app separators (9 instances) to create logical application groups&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Application Binding:&lt;/strong&gt; Assign each application to dedicated spaces via right-click context menu&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Animation Optimization:&lt;/strong&gt; Enable &amp;ldquo;Reduce motion&amp;rdquo; in Accessibility settings for faster transitions&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Keyboard Navigation:&lt;/strong&gt; Configure &lt;code&gt;Option + [1-9]&lt;/code&gt; shortcuts for instant space switching via Mission Control settings&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;workflow-benefits&#34;&gt;&#xA;Workflow Benefits&#xA;&lt;a href=&#34;#workflow-benefits&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;This configuration enforces single-tasking by design, eliminating visual distractions while maintaining rapid application access through muscle memory keyboard shortcuts. The systematic approach reduces decision fatigue and improves sustained focus on primary tasks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Paper Summary: AWS MemoryDB</title>
      <link>https://blog.manparvesh.com/posts/aws-memorydb/</link>
      <pubDate>Tue, 05 Nov 2024 21:39:14 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/aws-memorydb/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: Amazon MemoryDB for Redis is a database service designed for&#xA;11 9s of durability with in-memory performance. In this paper, we&#xA;describe the architecture of MemoryDB and how we leverage opensource Redis, a popular data structure store, to build an enterprise grade cloud database. MemoryDB offloads durability concerns to&#xA;a separate low-latency, durable transaction log service, allowing&#xA;us to scale performance, availability, and durability independently&#xA;from the in-memory execution engine. We describe how, using this&#xA;architecture, we are able to remain fully compatible with Redis,&#xA;while providing single-digit millisecond write and microsecondscale read latencies, strong consistency, and high availability. MemoryDB launched in 2021.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Choosing the Right Distributed Database: Balancing Consistency, Performance, and Cost</title>
      <link>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</link>
      <pubDate>Sun, 03 Nov 2024 19:04:25 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</guid>
      <description>&lt;p&gt;In this blog post I will write about our thought process behind choosing a distributed database solution on AWS while looking for sub-millisecond latency and strong consistency.&lt;/p&gt;&#xA;&lt;h2 id=&#34;our-requirements&#34;&gt;&#xA;Our Requirements&#xA;&lt;a href=&#34;#our-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Our requirements for this database service were as follows:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Sub-millisecond reads and writes: The latency metrics should be as close to an in-memory datastore as possible.&lt;/li&gt;&#xA;&lt;li&gt;Strong consistency: We required a guarantee that our clients always see the most up-to-date data.&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance: This is an internal service and several of our services depend on it, so it should be able to recover from any failure conditions in network, system, etc.&lt;/li&gt;&#xA;&lt;li&gt;Low or no operations cost: This is usually possible with AWS-managed services&lt;/li&gt;&#xA;&lt;li&gt;Scalability: We wanted this database to be easily scalable to handle our peak loads.&lt;/li&gt;&#xA;&lt;li&gt;Key-value database&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;initial-thoughts-based-on-the-requirements&#34;&gt;&#xA;Initial thoughts based on the requirements&#xA;&lt;a href=&#34;#initial-thoughts-based-on-the-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Some open-source options that fit our use case are for key-value database are: MongoDB, Redis, Cassandra, etc.&lt;/li&gt;&#xA;&lt;li&gt;If we want sub-millisecond latencies, only redis or redis-based solution would fit our use-case.&lt;/li&gt;&#xA;&lt;li&gt;We can deploy our own redis cluster on AWS, but that would lead to operational overhead, and it&amp;rsquo;s pointless because of multiple redis-based solutions provided by AWS.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;evaluating-aws-solutions&#34;&gt;&#xA;Evaluating AWS solutions&#xA;&lt;a href=&#34;#evaluating-aws-solutions&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;aws-dynamodb&#34;&gt;&#xA;AWS DynamoDB&#xA;&lt;a href=&#34;#aws-dynamodb&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;DynamoDB&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is an incredible key-value database solution provided by AWS. It&amp;rsquo;s highly reliable and performant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yoda V2: Architectural Redesign</title>
      <link>https://blog.manparvesh.com/posts/yoda-v2/</link>
      <pubDate>Sat, 21 Sep 2024 01:21:22 -0700</pubDate>
      <guid>https://blog.manparvesh.com/posts/yoda-v2/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://github.com/yoda-pa/yoda/raw/v2/logo.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;project-origins&#34;&gt;&#xA;Project Origins&#xA;&lt;a href=&#34;#project-origins&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Yoda was named after the wise Jedi character and developed as an open-source personal assistant CLI&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. The project began in 2017 as a learning platform for exploring various software engineering concepts through practical implementation.&lt;/p&gt;&#xA;&lt;h2 id=&#34;evolution-and-challenges&#34;&gt;&#xA;Evolution and Challenges&#xA;&lt;a href=&#34;#evolution-and-challenges&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Initial Growth:&lt;/strong&gt; The project gained traction through community sharing, attracting international contributors and expanding functionality.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Technical Debt:&lt;/strong&gt; Rapid growth without proper architectural planning led to code bloat and maintenance complexity, ultimately resulting in project suspension during my graduate studies.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
