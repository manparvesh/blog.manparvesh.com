<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on Man Parvesh&#39;s Technical Journal</title>
    <link>https://blog.manparvesh.com/tags/redis/</link>
    <description>Recent content in Redis on Man Parvesh&#39;s Technical Journal</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 05 Nov 2024 21:39:14 -0800</lastBuildDate>
    <atom:link href="https://blog.manparvesh.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Paper Summary: AWS MemoryDB</title>
      <link>https://blog.manparvesh.com/posts/aws-memorydb/</link>
      <pubDate>Tue, 05 Nov 2024 21:39:14 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/aws-memorydb/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;: Amazon MemoryDB for Redis is a database service designed for&#xA;11 9s of durability with in-memory performance. In this paper, we&#xA;describe the architecture of MemoryDB and how we leverage opensource Redis, a popular data structure store, to build an enterprise grade cloud database. MemoryDB offloads durability concerns to&#xA;a separate low-latency, durable transaction log service, allowing&#xA;us to scale performance, availability, and durability independently&#xA;from the in-memory execution engine. We describe how, using this&#xA;architecture, we are able to remain fully compatible with Redis,&#xA;while providing single-digit millisecond write and microsecondscale read latencies, strong consistency, and high availability. MemoryDB launched in 2021.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Choosing the Right Distributed Database: Balancing Consistency, Performance, and Cost</title>
      <link>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</link>
      <pubDate>Sun, 03 Nov 2024 19:04:25 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</guid>
      <description>&lt;p&gt;In this blog post I will write about our thought process behind choosing a distributed database solution on AWS while looking for sub-millisecond latency and strong consistency.&lt;/p&gt;&#xA;&lt;h2 id=&#34;our-requirements&#34;&gt;&#xA;Our Requirements&#xA;&lt;a href=&#34;#our-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Our requirements for this database service were as follows:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Sub-millisecond reads and writes: The latency metrics should be as close to an in-memory datastore as possible.&lt;/li&gt;&#xA;&lt;li&gt;Strong consistency: We required a guarantee that our clients always see the most up-to-date data.&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance: This is an internal service and several of our services depend on it, so it should be able to recover from any failure conditions in network, system, etc.&lt;/li&gt;&#xA;&lt;li&gt;Low or no operations cost: This is usually possible with AWS-managed services&lt;/li&gt;&#xA;&lt;li&gt;Scalability: We wanted this database to be easily scalable to handle our peak loads.&lt;/li&gt;&#xA;&lt;li&gt;Key-value database&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;initial-thoughts-based-on-the-requirements&#34;&gt;&#xA;Initial thoughts based on the requirements&#xA;&lt;a href=&#34;#initial-thoughts-based-on-the-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Some open-source options that fit our use case are for key-value database are: MongoDB, Redis, Cassandra, etc.&lt;/li&gt;&#xA;&lt;li&gt;If we want sub-millisecond latencies, only redis or redis-based solution would fit our use-case.&lt;/li&gt;&#xA;&lt;li&gt;We can deploy our own redis cluster on AWS, but that would lead to operational overhead, and it&amp;rsquo;s pointless because of multiple redis-based solutions provided by AWS.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;evaluating-aws-solutions&#34;&gt;&#xA;Evaluating AWS solutions&#xA;&lt;a href=&#34;#evaluating-aws-solutions&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;aws-dynamodb&#34;&gt;&#xA;AWS DynamoDB&#xA;&lt;a href=&#34;#aws-dynamodb&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;DynamoDB&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is an incredible key-value database solution provided by AWS. It&amp;rsquo;s highly reliable and performant.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
