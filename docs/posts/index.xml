<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Man Parvesh&#39;s Tech Shenanigans</title>
    <link>https://blog.manparvesh.com/posts/</link>
    <description>Recent content in Posts on Man Parvesh&#39;s Tech Shenanigans</description>
    <generator>Hugo</generator>
    <language>en-US</language>
    <lastBuildDate>Sun, 03 Nov 2024 19:04:25 -0800</lastBuildDate>
    <atom:link href="https://blog.manparvesh.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Choosing the Right Distributed Database: Balancing Consistency, Performance, and Cost</title>
      <link>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</link>
      <pubDate>Sun, 03 Nov 2024 19:04:25 -0800</pubDate>
      <guid>https://blog.manparvesh.com/posts/choosing-the-right-distributed-database/</guid>
      <description>&lt;p&gt;In this blog post I will write about our thought process behind choosing a distributed database solution on AWS while looking for sub-millisecond latency and strong consistency.&lt;/p&gt;&#xA;&lt;h2 id=&#34;our-requirements&#34;&gt;&#xA;Our Requirements&#xA;&lt;a href=&#34;#our-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Our requirements for this database service were as follows:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Sub-millisecond reads and writes: The latency metrics should be as close to an in-memory datastore as possible.&lt;/li&gt;&#xA;&lt;li&gt;Strong consistency: We required a guarantee that our clients always see the most up-to-date data.&lt;/li&gt;&#xA;&lt;li&gt;Fault tolerance: This is an internal service and several of our services depend on it, so it should be able to recover from any failure conditions in network, system, etc.&lt;/li&gt;&#xA;&lt;li&gt;Low or no operations cost: This is usually possible with AWS-managed services&lt;/li&gt;&#xA;&lt;li&gt;Scalability: We wanted this database to be easily scalable to handle our peak loads.&lt;/li&gt;&#xA;&lt;li&gt;Key-value database&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;initial-thoughts-based-on-the-requirements&#34;&gt;&#xA;Initial thoughts based on the requirements&#xA;&lt;a href=&#34;#initial-thoughts-based-on-the-requirements&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Some open-source options that fit our use case are for key-value database are: MongoDB, Redis, Cassandra, etc.&lt;/li&gt;&#xA;&lt;li&gt;If we want sub-millisecond latencies, only redis or redis-based solution would fit our use-case.&lt;/li&gt;&#xA;&lt;li&gt;We can deploy our own redis cluster on AWS, but that would lead to operational overhead, and it&amp;rsquo;s pointless because of multiple redis-based solutions provided by AWS.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;evaluating-aws-solutions&#34;&gt;&#xA;Evaluating AWS solutions&#xA;&lt;a href=&#34;#evaluating-aws-solutions&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;h3 id=&#34;aws-dynamodb&#34;&gt;&#xA;AWS DynamoDB&#xA;&lt;a href=&#34;#aws-dynamodb&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;DynamoDB&lt;label for=&#34;sidenote-1&#34; class=&#34;margin-toggle sidenote-number&#34;&gt;(1)&lt;/label&gt;&#xA;&lt;input type=&#34;checkbox&#34; id=&#34;sidenote-1&#34; class=&#34;margin-toggle&#34;/&gt;&#xA;&lt;span class=&#34;sidenote&#34;&gt;&#xA;&lt;span class=&#34;sidenote-number&#34;&gt;(1)&lt;/span&gt;&lt;a href=&#34;https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf&#34; target=&#34;_blank&#34; &gt;https://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf&lt;/a&gt;&#xA;&lt;/span&gt;&#xA; is an incredible key-value database solution provided by AWS. It&amp;rsquo;s highly reliable and performant.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Yoda V2</title>
      <link>https://blog.manparvesh.com/posts/yoda-v2/</link>
      <pubDate>Sat, 21 Sep 2024 01:21:22 -0700</pubDate>
      <guid>https://blog.manparvesh.com/posts/yoda-v2/</guid>
      <description>&lt;figure class=&#34;fullwidth&#34;&gt;&#xA;  &#xA;  &#xA;  &lt;img src=&#34;https://github.com/yoda-pa/yoda/raw/v2/logo.png&#34; alt=&#34;Yoda logo&#34;&gt;&#xA;  &#xA;  &lt;figcaption&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;  &lt;/figcaption&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;&lt;h2 id=&#34;why-is-it-called-yoda&#34;&gt;&#xA;Why is it called Yoda&#xA;&lt;a href=&#34;#why-is-it-called-yoda&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Since Yoda was a movie character considered wise and knowledgeable, I named it Yoda and made it open source&lt;label for=&#34;sidenote-1&#34; class=&#34;margin-toggle sidenote-number&#34;&gt;(1)&lt;/label&gt;&#xA;&lt;input type=&#34;checkbox&#34; id=&#34;sidenote-1&#34; class=&#34;margin-toggle&#34;/&gt;&#xA;&lt;span class=&#34;sidenote&#34;&gt;&#xA;&lt;span class=&#34;sidenote-number&#34;&gt;(1)&lt;/span&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/yoda-pa/yoda/&#34; target=&#34;_blank&#34; &gt;Github: yoda-pa/yoda&lt;/a&gt;&#xA;&lt;/em&gt;&#xA;&lt;/span&gt;&#xA;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;history-of-the-project-&#34;&gt;&#xA;History of the project üï∞Ô∏è&#xA;&lt;a href=&#34;#history-of-the-project-&#34; class=&#34;heading-anchor&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;I started Yoda PA as a hobby project after graduating from college and starting my first job (circa 2017). My original intention for this project was to learn how several small things in software work, so I decided to build miniature versions of everything I wanted to learn and group them under a large project‚Äîmy original to-do list. As you can see, it‚Äôs a mess.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
